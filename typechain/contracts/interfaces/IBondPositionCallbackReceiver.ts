/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../common";

export type BondPositionStruct = {
  asset: PromiseOrValue<string>;
  nonce: PromiseOrValue<BigNumberish>;
  expiredWith: PromiseOrValue<BigNumberish>;
  isSettled: PromiseOrValue<boolean>;
  amount: PromiseOrValue<BigNumberish>;
};

export type BondPositionStructOutput = [
  string,
  BigNumber,
  number,
  boolean,
  BigNumber
] & {
  asset: string;
  nonce: BigNumber;
  expiredWith: number;
  isSettled: boolean;
  amount: BigNumber;
};

export type CouponKeyStruct = {
  asset: PromiseOrValue<string>;
  epoch: PromiseOrValue<BigNumberish>;
};

export type CouponKeyStructOutput = [string, number] & {
  asset: string;
  epoch: number;
};

export type CouponStruct = {
  key: CouponKeyStruct;
  amount: PromiseOrValue<BigNumberish>;
};

export type CouponStructOutput = [CouponKeyStructOutput, BigNumber] & {
  key: CouponKeyStructOutput;
  amount: BigNumber;
};

export interface IBondPositionCallbackReceiverInterface
  extends utils.Interface {
  functions: {
    "bondPositionAdjustCallback(uint256,(address,uint64,uint8,bool,uint256),(address,uint64,uint8,bool,uint256),((address,uint8),uint256)[],((address,uint8),uint256)[],bytes)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic: "bondPositionAdjustCallback"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "bondPositionAdjustCallback",
    values: [
      PromiseOrValue<BigNumberish>,
      BondPositionStruct,
      BondPositionStruct,
      CouponStruct[],
      CouponStruct[],
      PromiseOrValue<BytesLike>
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "bondPositionAdjustCallback",
    data: BytesLike
  ): Result;

  events: {};
}

export interface IBondPositionCallbackReceiver extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IBondPositionCallbackReceiverInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    bondPositionAdjustCallback(
      tokenId: PromiseOrValue<BigNumberish>,
      oldPosition: BondPositionStruct,
      newPosition: BondPositionStruct,
      couponsMinted: CouponStruct[],
      couponsToBurn: CouponStruct[],
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  bondPositionAdjustCallback(
    tokenId: PromiseOrValue<BigNumberish>,
    oldPosition: BondPositionStruct,
    newPosition: BondPositionStruct,
    couponsMinted: CouponStruct[],
    couponsToBurn: CouponStruct[],
    data: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    bondPositionAdjustCallback(
      tokenId: PromiseOrValue<BigNumberish>,
      oldPosition: BondPositionStruct,
      newPosition: BondPositionStruct,
      couponsMinted: CouponStruct[],
      couponsToBurn: CouponStruct[],
      data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    bondPositionAdjustCallback(
      tokenId: PromiseOrValue<BigNumberish>,
      oldPosition: BondPositionStruct,
      newPosition: BondPositionStruct,
      couponsMinted: CouponStruct[],
      couponsToBurn: CouponStruct[],
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    bondPositionAdjustCallback(
      tokenId: PromiseOrValue<BigNumberish>,
      oldPosition: BondPositionStruct,
      newPosition: BondPositionStruct,
      couponsMinted: CouponStruct[],
      couponsToBurn: CouponStruct[],
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
