/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CouponOracle,
  CouponOracleInterface,
} from "../../contracts/CouponOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "assets",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "feeds",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AssetFeedAlreadySet",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidDecimals",
    type: "error",
  },
  {
    inputs: [],
    name: "LengthMismatch",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "fallbackOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getAssetPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "assets",
        type: "address[]",
      },
    ],
    name: "getAssetsPrices",
    outputs: [
      {
        internalType: "uint256[]",
        name: "prices",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getFeed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newFallbackOracle",
        type: "address",
      },
    ],
    name: "setFallbackOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "assets",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "feeds",
        type: "address[]",
      },
    ],
    name: "setFeeds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000e3338038062000e33833981016040819052620000349162000359565b6200003f3362000053565b6200004b8282620000a3565b505062000405565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8051825114620000c9576040516001621398b960e31b0319815260040160405180910390fd5b60005b82518110156200027457818181518110620000eb57620000eb620003c3565b60200260200101516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000131573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001579190620003d9565b60ff166008146200017b57604051630692acc560e51b815260040160405180910390fd5b60006001600160a01b0316600260008584815181106200019f576200019f620003c3565b6020908102919091018101516001600160a01b03908116835290820192909252604001600020541614620001e65760405163aeb417e160e01b815260040160405180910390fd5b818181518110620001fb57620001fb620003c3565b6020026020010151600260008584815181106200021c576200021c620003c3565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550806001019050620000cc565b505050565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b0381168114620002a757600080fd5b919050565b600082601f830112620002be57600080fd5b815160206001600160401b0380831115620002dd57620002dd62000279565b8260051b604051601f19603f8301168101818110848211171562000305576200030562000279565b6040529384528581018301938381019250878511156200032457600080fd5b83870191505b848210156200034e576200033e826200028f565b835291830191908301906200032a565b979650505050505050565b600080604083850312156200036d57600080fd5b82516001600160401b03808211156200038557600080fd5b6200039386838701620002ac565b93506020850151915080821115620003aa57600080fd5b50620003b985828601620002ac565b9150509250929050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215620003ec57600080fd5b815160ff81168114620003fe57600080fd5b9392505050565b610a1e80620004156000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c80638da5cb5b11610076578063b3596f071161005b578063b3596f071461017c578063f2fde38b1461019d578063f7af4ab4146101b057600080fd5b80638da5cb5b1461014b5780639d23d9f21461015c57600080fd5b8063313ce567116100a7578063313ce56714610121578063629838e514610130578063715018a61461014357600080fd5b806316b8e731146100c3578063170aee731461010c575b600080fd5b6100ef6100d1366004610774565b6001600160a01b039081166000908152600260205260409020541690565b6040516001600160a01b0390911681526020015b60405180910390f35b61011f61011a366004610774565b6101c3565b005b60405160088152602001610103565b6001546100ef906001600160a01b031681565b61011f6101fa565b6000546001600160a01b03166100ef565b61016f61016a366004610847565b61020e565b6040516101039190610884565b61018f61018a366004610774565b6102af565b604051908152602001610103565b61011f6101ab366004610774565b61035e565b61011f6101be3660046108c8565b6103f3565b6101cb610409565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b610202610409565b61020c6000610463565b565b6060815167ffffffffffffffff81111561022a5761022a61078f565b604051908082528060200260200182016040528015610253578160200160208202803683370190505b50905060005b82518110156102a9576102848382815181106102775761027761092c565b60200260200101516102af565b8282815181106102965761029661092c565b6020908102919091010152600101610259565b50919050565b6001600160a01b03808216600090815260026020526040812054909116801561034e576000816001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610312573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610336919061095c565b505050915050600081131561034c579392505050565b505b610357836104c0565b9392505050565b610366610409565b6001600160a01b0381166103e75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6103f081610463565b50565b6103fb610409565b610405828261054e565b5050565b6000546001600160a01b0316331461020c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103de565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001546040517fb3596f070000000000000000000000000000000000000000000000000000000081526001600160a01b038381166004830152600092169063b3596f0790602401602060405180830381865afa158015610524573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054891906109ac565b92915050565b8051825114610589576040517fff633a3800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8251811015610753578181815181106105a7576105a761092c565b60200260200101516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061091906109c5565b60ff1660081461064c576040517fd25598a000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001600160a01b03166002600085848151811061066d5761066d61092c565b6020908102919091018101516001600160a01b039081168352908201929092526040016000205416146106cc576040517faeb417e100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8181815181106106de576106de61092c565b6020026020010151600260008584815181106106fc576106fc61092c565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b0316021790555080600101905061058c565b505050565b80356001600160a01b038116811461076f57600080fd5b919050565b60006020828403121561078657600080fd5b61035782610758565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126107b657600080fd5b8135602067ffffffffffffffff808311156107d3576107d361078f565b8260051b604051601f19603f830116810181811084821117156107f8576107f861078f565b60405293845285810183019383810192508785111561081657600080fd5b83870191505b8482101561083c5761082d82610758565b8352918301919083019061081c565b979650505050505050565b60006020828403121561085957600080fd5b813567ffffffffffffffff81111561087057600080fd5b61087c848285016107a5565b949350505050565b6020808252825182820181905260009190848201906040850190845b818110156108bc578351835292840192918401916001016108a0565b50909695505050505050565b600080604083850312156108db57600080fd5b823567ffffffffffffffff808211156108f357600080fd5b6108ff868387016107a5565b9350602085013591508082111561091557600080fd5b50610922858286016107a5565b9150509250929050565b634e487b7160e01b600052603260045260246000fd5b805169ffffffffffffffffffff8116811461076f57600080fd5b600080600080600060a0868803121561097457600080fd5b61097d86610942565b94506020860151935060408601519250606086015191506109a060808701610942565b90509295509295909350565b6000602082840312156109be57600080fd5b5051919050565b6000602082840312156109d757600080fd5b815160ff8116811461035757600080fdfea2646970667358221220af00f60c45db858eb5bb34e1abb0ec57b08bd1593268d87479d7a1b2e85b348664736f6c63430008130033";

type CouponOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CouponOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CouponOracle__factory extends ContractFactory {
  constructor(...args: CouponOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    assets: PromiseOrValue<string>[],
    feeds: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CouponOracle> {
    return super.deploy(
      assets,
      feeds,
      overrides || {}
    ) as Promise<CouponOracle>;
  }
  override getDeployTransaction(
    assets: PromiseOrValue<string>[],
    feeds: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(assets, feeds, overrides || {});
  }
  override attach(address: string): CouponOracle {
    return super.attach(address) as CouponOracle;
  }
  override connect(signer: Signer): CouponOracle__factory {
    return super.connect(signer) as CouponOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CouponOracleInterface {
    return new utils.Interface(_abi) as CouponOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CouponOracle {
    return new Contract(address, _abi, signerOrProvider) as CouponOracle;
  }
}
